CREATE TABLE CUSTOMER
( Email VARCHAR(40)  NOT NULL,
  Phone_num VARCHAR(20) NOT NULL,
  Fname VARCHAR(30), 
  Lname VARCHAR(30),
  PRIMARY KEY(Email)  );
 
CREATE TABLE PUBLISHER
( Name VARCHAR(100)  NOT NULL,
  Phone_num VARCHAR(20) NOT NULL,
  PRIMARY KEY(Name)  );
 
CREATE TABLE ADDRESS
( street VARCHAR(30) NOT NULL,
  city VARCHAR(20) NOT NULL,
  state VARCHAR(20) NOT NULL,
  zipcode VARCHAR(20) NOT NULL,
  PRIMARY KEY(street, city, state, zipcode) );
 
CREATE TABLE AUTHOR
( Fname VARCHAR(20) NOT NULL, 
  Mname VARCHAR(20),
  Lname VARCHAR(20) NOT NULL,
  Phone_num VARCHAR(20) NOT NULL,
  PRIMARY KEY(Phone_num)  );
 
CREATE TABLE CATEGORY
( Name VARCHAR(200)  NOT NULL,
  PRIMARY KEY(Name)  );
 
CREATE TABLE BOOK
( ISBN VARCHAR(13) NOT NULL,
  Pname VARCHAR(100),
  Edition INT,
  Publish_date INT,
  Price INT,
  Title VARCHAR(300),
  Sales_amount INT,
  PRIMARY KEY(ISBN),
  CONSTRAINT BPFK
  FOREIGN KEY(Pname) REFERENCES PUBLISHER(Name)
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
 
CREATE TABLE AUTHOR_WRITE_BOOK
( ISBN INT NOT NULL,
  Aphone_num VARCHAR(20) NOT NULL,  
  PRIMARY KEY(ISBN, Aphone_num),
  CONSTRAINT AWBFKA
  FOREIGN KEY(Aphone_num) REFERENCES AUTHOR(Phone_num)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT AWBFKB
   FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
CREATE TABLE INVENTORY
( inventory_id INT NOT NULL,
  Capacity   INT,
  street VARCHAR(30) NOT NULL,
  city VARCHAR(20) NOT NULL,
  state VARCHAR(20) NOT NULL,
  zipcode VARCHAR(20) NOT NULL,
  PRIMARY KEY(inventory_id),
  CONSTRAINT IAFK
  FOREIGN KEY(street) REFERENCES ADDRESS(street)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(city) REFERENCES ADDRESS(city)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(state) REFERENCES ADDRESS(state)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(zipcode) REFERENCES ADDRESS(zipcode)
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
CREATE TABLE COURSE
( Course_num VARCHAR(15) NOT NULL,
  PRIMARY KEY(Course_num)
);
 
CREATE TABLE COURSE_use_BOOK
( Course_num VARCHAR(15) NOT NULL,
  ISBN VARCHAR(13) NOT NULL,
  PRIMARY KEY(Course_num, ISBN),
  CONSTRAINT COURSENUMFK
  FOREIGN KEY(Course_num) REFERENCES COURSE(Course_num)
  ON DELETE SET NULL  ON UPDATE CASCADE,
  CONSTRAINT ISBNFK
  FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
  ON DELETE SET NULL  ON UPDATE CASCADE
);
 
CREATE TABLE POST_COURSE
( Prerequisite_num VARCHAR(15) NOT NULL,
  Post_course_num VARCHAR(15) NOT NULL,
  PRIMARY KEY(Prerequisite_num, Post_course_num),
  CONSTRAINT PREFK
  FOREIGN KEY(Prerequisite_num) REFERENCES COURSE(Course_num)
  ON DELETE SET NULL  ON UPDATE CASCADE,
  CONSTRAINT POSTFK
  FOREIGN KEY(Post_course_num) REFERENCES COURSE(Course_num)
  ON DELETE SET NULL  ON UPDATE CASCADE
);
 
CREATE TABLE BOOK_belongs_to_CATEGORY
( ISBN VARCHAR(13) NOT NULL,
  Category_name VARCHAR(50) NOT NULL,
  PRIMARY KEY(ISBN, Category_name),
  CONSTRAINT ISBNFK
  FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
  ON DELETE SET NULL  ON UPDATE CASCADE,
  CONSTRAINT CATEFK
  FOREIGN KEY(Category_name) REFERENCES CATEGORY(Category_name)
);
 
CREATE TABLE TRANSACTION_HISTORY
( transaction_id VARCHAR(30) NOT NULL,
  Cmail VARCHAR(40) NOT NULL,
  Date 	INT,
  Sold  BOOLEAN,
Return_date 	INT,
Returned INT,
Amount int,
PRIMARY KEY(transaction_id),
CONSTRAINT TCFK
FOREIGN KEY(Cmail) REFERENCES CUSTOMER(Email)
ON DELETE SET NULL ON UPDATE CASCADE);
 
CREATE TABLE BOOK_has_TRANSACTION
( ISBN VARCHAR(13) NOT NULL,
  transaction_id VARCHAR(30) NOT NULL,
  PRIMARY KEY(ISBN, transaction_id),
  CONSTRAINT ISBNFK
  FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
  ON DELETE SET NULL  ON UPDATE CASCADE,
  CONSTRAINT TIDFK
  FOREIGN KEY(transaction_id) REFERENCES TRANSACTION_HISTORY(transaction_id)
  ON DELETE SET NULL  ON UPDATE CASCADE
);
 
CREATE TABLE REVIEW
( R_id VARCHAR(30) NOT NULL,
  Cmail  VARCHAR(40) NOT NULL,
  ISBN VARCHAR(13) NOT NULL,
  Rating VARCHAR(3),
  Content VARCHAR(3000),
  
 PRIMARY KEY(R_id),
 CONSTRAINT RCFK
 FOREIGN KEY(Cmail) REFERENCES CUSTOMER(Email)
 ON DELETE SET NULL  ON UPDATE CASCADE,
 CONSTRAINT RBFK
 FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN)
 ON DELETE SET NULL  ON UPDATE CASCADE
);
 
 
CREATE TABLE PAYMENT
( credit_card_num VARCHAR(19)  NOT NULL,
  Expired_date INT NOT NULL,
  Security_code INT NOT NULL,
  street VARCHAR(30) NOT NULL,
  city VARCHAR(20) NOT NULL,
  state VARCHAR(20) NOT NULL,
  zipcode VARCHAR(20) NOT NULL,
  PRIMARY KEY(credit_card_num),
  CONSTRAINT PAFK
  FOREIGN KEY(street) REFERENCES ADDRESS(street)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(city) REFERENCES ADDRESS(city)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(state) REFERENCES ADDRESS(state)
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(zipcode) REFERENCES ADDRESS(zipcode)
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
CREATE TABLE CUSTOMER_has_PAYMENT
( Email VARCHAR(40) NOT NULL,
  
  credit_card_num VARCHAR(19) NOT NULL,
  PRIMARY KEY(Email, credit_card_num),
  CONSTRAINT CPCFK
  FOREIGN KEY(Email) REFERENCES CUSTOMER(Email)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT CPPFK
  FOREIGN KEY(credit_card_num) REFERENCES PAYMENT(credit_card_num)  
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
CREATE TABLE CUSTOMER_has_ADDRESS
( street VARCHAR(30) NOT NULL,
  city VARCHAR(20) NOT NULL,
  state VARCHAR(20) NOT NULL,
  zipcode VARCHAR(20) NOT NULL,
  Email VARCHAR(40) NOT NULL,
  PRIMARY KEY(street, city, state, zipcode, Email),
  CONSTRAINT CAFK1
  FOREIGN KEY(street) REFERENCES ADDRESS(street)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT CAFK2
  FOREIGN KEY(city) REFERENCES ADDRESS(city)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT CAFK3
  FOREIGN KEY(state) REFERENCES ADDRESS(state)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT CAFK4
  FOREIGN KEY(zipcode) REFERENCES ADDRESS(zipcode)
  ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT CAFK5
  FOREIGN KEY(Email) REFERENCES CUSTOMER(Email)
  ON DELETE SET NULL ON UPDATE CASCADE
);
 
 
Create table INVENTORY_STORE_BOOK
(ISBN VARCHAR(13) NOT NULL,
In_id INT NOT NULL,
Amount int not null,
PRIMARY KEY(ISBN, In_id),
CONSTRAINT ISBBFK
FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
ON DELETE SET NULL ON UPDATE CASCADE,
CONSTRAINT ISBIFK
FOREIGN KEY(In_id) REFERENCES INVENTORY(in_id)
ON DELETE SET NULL ON UPDATE CASCADE
);
